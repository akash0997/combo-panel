{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/ComboPanel.tsx","webpack:///./components/ComboPanelEditor.tsx","webpack:///./components/Gauge/BigGaugeLayout.tsx","webpack:///./components/Gauge/GaugeOptionsEditor.tsx","webpack:///./components/Gauge/ValueOptions.tsx","webpack:///./components/Graph/BigGraphLayout.tsx","webpack:///./components/Graph/GraphOptions.tsx","webpack:///./components/LayoutOptions.tsx","webpack:///./components/Text/BigTextLayout.tsx","webpack:///./components/Text/Text.tsx","webpack:///./components/UnitPicker.tsx","webpack:///./module.tsx","webpack:///./types.ts","webpack:///external \"@grafana/ui\"","webpack:///external \"react\""],"names":[],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./module.tsx\");\n","import React, { PureComponent } from 'react';\nimport {\n  NullValueMode,\n  PanelProps,\n  processTimeSeries,\n  ThemeContext,\n} from '@grafana/ui';\n\nimport { ComboOptions } from '../types';\nimport { BigTextLayout } from './Text/BigTextLayout';\nimport { BigGaugeLayout } from './Gauge/BigGaugeLayout';\nimport { BigGraphLayout } from './Graph/BigGraphLayout';\n\ninterface Props extends PanelProps<ComboOptions> {}\n\nexport class ComboPanel extends PureComponent<Props> {\n  // Gauge does not get proper width\n\n  render() {\n    const {\n      onInterpolate,\n      options,\n      panelData,\n      timeRange,\n      width,\n      height,\n    } = this.props;\n\n    const { layout, valueMappings, thresholds } = options;\n\n    if (panelData.timeSeries) {\n      const timeSeries = processTimeSeries({\n        timeSeries: panelData.timeSeries,\n        nullValueMode: NullValueMode.Null,\n      });\n\n      switch (layout) {\n        case 'bigtext':\n          return (\n            <ThemeContext.Consumer>\n              {theme => {\n                return (\n                  <BigTextLayout\n                    timeSeries={timeSeries}\n                    timeRange={timeRange}\n                    width={width}\n                    height={height}\n                    options={options}\n                    onInterpolate={onInterpolate}\n                    valueMappings={valueMappings}\n                    thresholds={thresholds}\n                    theme={theme}\n                  />\n                );\n              }}\n            </ThemeContext.Consumer>\n          );\n\n        case 'biggraph':\n          return (\n            <ThemeContext.Consumer>\n              {theme => {\n                return (\n                  <BigGraphLayout\n                    timeSeries={timeSeries}\n                    timeRange={timeRange}\n                    width={width}\n                    height={height}\n                    options={options}\n                    onInterpolate={onInterpolate}\n                    theme={theme}\n                    valueMappings={valueMappings}\n                    thresholds={thresholds}\n                  />\n                );\n              }}\n            </ThemeContext.Consumer>\n          );\n\n        default:\n        case 'biggauge':\n          return (\n            <ThemeContext.Consumer>\n              {theme => {\n                return (\n                  <BigGaugeLayout\n                    timeSeries={timeSeries}\n                    timeRange={timeRange}\n                    width={width}\n                    height={height}\n                    options={options}\n                    onInterpolate={onInterpolate}\n                    theme={theme}\n                    thresholds={thresholds}\n                    valueMappings={valueMappings}\n                  />\n                );\n              }}\n            </ThemeContext.Consumer>\n          );\n      }\n    } else {\n      return <div>Panel needs time series data</div>;\n    }\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  PanelEditorProps,\n  PanelOptionsGrid,\n  ValueMappingsEditor,\n  Threshold,\n  ThresholdsEditor,\n  ValueMapping,\n} from '@grafana/ui';\n\nimport { LayoutOptions } from './LayoutOptions';\nimport { ValueOptions } from './Gauge/ValueOptions';\nimport { GaugeOptionsEditor } from './Gauge/GaugeOptionsEditor';\nimport { GraphOptions } from './Graph/GraphOptions';\n\nimport { ComboOptions, SingleStatValueOptions } from '../types';\n\nexport class ComboPanelEditor extends PureComponent<\n  PanelEditorProps<ComboOptions>\n> {\n  onLayoutChange = layout =>\n    this.props.onChange({ ...this.props.options, layout: layout });\n\n  onValueOptionsChanged = (valueOptions: SingleStatValueOptions) =>\n    this.props.onChange({\n      ...this.props.options,\n      valueOptions,\n    });\n\n  onThresholdsChanged = (thresholds: Threshold[]) => {\n    this.props.onChange({\n      ...this.props.options,\n      thresholds,\n    });\n  };\n\n  onValueMappingsChanged = (valueMappings: ValueMapping[]) =>\n    this.props.onChange({\n      ...this.props.options,\n      valueMappings,\n    });\n\n  render() {\n    const { options, onChange } = this.props;\n    const { layout, valueOptions } = options;\n\n    return (\n      <>\n        <PanelOptionsGrid>\n          <LayoutOptions\n            onChange={layout => this.onLayoutChange(layout)}\n            selectedLayout={layout}\n          />\n          <GraphOptions options={options} onChange={onChange} />\n        </PanelOptionsGrid>\n        <PanelOptionsGrid>\n          <ValueOptions\n            options={valueOptions}\n            onChange={valueOptions => this.onValueOptionsChanged(valueOptions)}\n          />\n          <GaugeOptionsEditor options={options} onChange={onChange} />\n          <ThresholdsEditor\n            thresholds={this.props.options.thresholds}\n            onChange={thresholds => this.onThresholdsChanged(thresholds)}\n          />\n        </PanelOptionsGrid>\n        <ValueMappingsEditor\n          valueMappings={options.valueMappings}\n          onChange={this.onValueMappingsChanged}\n        />\n      </>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Gauge, Graph, ValueMapping } from '@grafana/ui';\n\nimport { Text } from '../Text/Text';\n\nimport { LayoutProps } from '../../types';\n\ninterface Props extends LayoutProps {}\n\nexport class BigGaugeLayout extends PureComponent<Props> {\n  render() {\n    const {\n      onInterpolate,\n      options,\n      timeSeries,\n      timeRange,\n      width,\n      height,\n      theme,\n      thresholds,\n      valueMappings,\n    } = this.props;\n\n    const gaugeValue = timeSeries[0].stats[options.valueOptions.stat];\n    const prefix = onInterpolate(options.valueOptions.prefix);\n    const suffix = onInterpolate(options.valueOptions.suffix);\n\n    return (\n      <div style={{ display: 'flex', width: '100%', height: '100%' }}>\n        <div style={{ width: '50%' }}>\n          <Text\n            style={{\n              height: '30%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              fontSize: '48px',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n            }}\n            theme={theme}\n            thresholds={thresholds}\n            valueMappings={valueMappings}\n            value={gaugeValue}\n          >\n            Server ok\n          </Text>\n          <div style={{ height: '70%' }}>\n            <Graph\n              timeSeries={timeSeries}\n              timeRange={timeRange}\n              width={width}\n              height={height}\n              showBars={options.showBars}\n              showLines={options.showLines}\n              showPoints={options.showPoints}\n            />\n          </div>\n        </div>\n        <div\n          style={{\n            width: '50%',\n            display: 'flex',\n            justifyContent: 'flex-end',\n          }}\n        >\n          <Gauge\n            value={gaugeValue}\n            width={width / 2}\n            height={height}\n            prefix={prefix}\n            suffix={suffix}\n            unit={options.valueOptions.unit}\n            decimals={options.valueOptions.decimals}\n            thresholds={options.thresholds}\n            valueMappings={[] as ValueMapping[]}\n            showThresholdLabels={options.showThresholdLabels}\n            showThresholdMarkers={options.showThresholdMarkers}\n            minValue={options.minValue}\n            maxValue={options.maxValue}\n            theme={theme}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Components\nimport { Switch, PanelOptionsGroup, PanelEditorProps } from '@grafana/ui';\n\n// Types\nimport { FormField } from '@grafana/ui';\nimport { ComboOptions } from '../../types';\n\nexport class GaugeOptionsEditor extends PureComponent<\n  PanelEditorProps<ComboOptions>\n> {\n  labelWidth = 8;\n\n  onToggleThresholdLabels = () =>\n    this.props.onChange({\n      ...this.props.options,\n      showThresholdLabels: !this.props.options.showThresholdLabels,\n    });\n\n  onToggleThresholdMarkers = () =>\n    this.props.onChange({\n      ...this.props.options,\n      showThresholdMarkers: !this.props.options.showThresholdMarkers,\n    });\n\n  onMinValueChange = ({ target }) =>\n    this.props.onChange({ ...this.props.options, minValue: target.value });\n\n  onMaxValueChange = ({ target }) =>\n    this.props.onChange({ ...this.props.options, maxValue: target.value });\n\n  render() {\n    const { options } = this.props;\n    const {\n      maxValue,\n      minValue,\n      showThresholdLabels,\n      showThresholdMarkers,\n    } = options;\n\n    return (\n      <PanelOptionsGroup title=\"Gauge options\">\n        <FormField\n          label=\"Min value\"\n          labelWidth={this.labelWidth}\n          onChange={this.onMinValueChange}\n          value={minValue}\n        />\n        <FormField\n          label=\"Max value\"\n          labelWidth={this.labelWidth}\n          onChange={this.onMaxValueChange}\n          value={maxValue}\n        />\n        <Switch\n          label=\"Show labels\"\n          labelClass={`width-${this.labelWidth}`}\n          checked={showThresholdLabels}\n          onChange={this.onToggleThresholdLabels}\n        />\n        <Switch\n          label=\"Show markers\"\n          labelClass={`width-${this.labelWidth}`}\n          checked={showThresholdMarkers}\n          onChange={this.onToggleThresholdMarkers}\n        />\n      </PanelOptionsGroup>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { SingleStatValueOptions } from '../../types';\nimport { FormField, FormLabel, PanelOptionsGroup, Select } from '@grafana/ui';\nimport { UnitPicker } from '../UnitPicker';\n\ninterface Props {\n  options: SingleStatValueOptions;\n  onChange: (valueOptions: SingleStatValueOptions) => void;\n}\n\nconst labelWidth = 6;\nconst statOptions = [\n  { value: 'min', label: 'Min' },\n  { value: 'max', label: 'Max' },\n  { value: 'avg', label: 'Average' },\n  { value: 'current', label: 'Current' },\n  { value: 'total', label: 'Total' },\n  { value: 'name', label: 'Name' },\n  { value: 'first', label: 'First' },\n  { value: 'delta', label: 'Delta' },\n  { value: 'diff', label: 'Difference' },\n  { value: 'range', label: 'Range' },\n  { value: 'last_time', label: 'Time of last point' },\n];\n\nexport class ValueOptions extends PureComponent<Props> {\n  onUnitChange = unit =>\n    this.props.onChange({ ...this.props.options, unit: unit.value });\n  onStatChange = stat =>\n    this.props.onChange({ ...this.props.options, stat: stat.value });\n\n  onDecimalChange = event => {\n    if (!isNaN(event.target.value)) {\n      this.props.onChange({\n        ...this.props.options,\n        decimals: parseInt(event.target.value, 10),\n      });\n    } else {\n      this.props.onChange({\n        ...this.props.options,\n        decimals: null,\n      });\n    }\n  };\n\n  onPrefixChange = event =>\n    this.props.onChange({ ...this.props.options, prefix: event.target.value });\n  onSuffixChange = event =>\n    this.props.onChange({ ...this.props.options, suffix: event.target.value });\n\n  render() {\n    const { stat, unit, decimals, prefix, suffix } = this.props.options;\n\n    let decimalsString = '';\n    if (Number.isFinite(decimals)) {\n      decimalsString = decimals.toString();\n    }\n\n    return (\n      <PanelOptionsGroup title=\"Gauge value\">\n        <div className=\"gf-form\">\n          <FormLabel width={labelWidth}>Stat</FormLabel>\n          <Select\n            width={12}\n            options={statOptions}\n            onChange={this.onStatChange}\n            value={statOptions.find(option => option.value === stat)}\n          />\n        </div>\n        <div className=\"gf-form\">\n          <FormLabel width={labelWidth}>Unit</FormLabel>\n          <UnitPicker defaultValue={unit} onChange={this.onUnitChange} />\n        </div>\n        <FormField\n          label=\"Decimals\"\n          labelWidth={labelWidth}\n          placeholder=\"auto\"\n          onChange={this.onDecimalChange}\n          value={decimalsString}\n          type=\"number\"\n        />\n        <FormField\n          label=\"Prefix\"\n          labelWidth={labelWidth}\n          onChange={this.onPrefixChange}\n          value={prefix || ''}\n        />\n        <FormField\n          label=\"Suffix\"\n          labelWidth={labelWidth}\n          onChange={this.onSuffixChange}\n          value={suffix || ''}\n        />\n      </PanelOptionsGroup>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Gauge, Graph, ValueMapping } from '@grafana/ui';\n\nimport { Text } from '../Text/Text';\n\nimport { LayoutProps } from '../../types';\n\ninterface Props extends LayoutProps {}\n\nexport class BigGraphLayout extends PureComponent<Props> {\n  render() {\n    const {\n      onInterpolate,\n      options,\n      timeSeries,\n      timeRange,\n      width,\n      height,\n      valueMappings,\n      theme,\n      thresholds,\n    } = this.props;\n\n    const gaugeValue = timeSeries[0].stats[options.valueOptions.stat];\n    const prefix = onInterpolate(options.valueOptions.prefix);\n    const suffix = onInterpolate(options.valueOptions.suffix);\n\n    return (\n      <div style={{ display: 'flex', width: '100%', height: '100%' }}>\n        <div style={{ width: '70%' }}>\n          <Graph\n            timeSeries={timeSeries}\n            timeRange={timeRange}\n            width={width}\n            height={height}\n            showBars={options.showBars}\n            showLines={options.showLines}\n            showPoints={options.showPoints}\n          />\n        </div>\n        <div style={{ width: '30%' }}>\n          <Text\n            value={gaugeValue}\n            thresholds={thresholds}\n            valueMappings={valueMappings}\n            theme={theme}\n            style={{\n              height: '30%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              fontSize: '48px',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n            }}\n          />\n          <div style={{ height: '50%' }}>\n            <Gauge\n              value={gaugeValue}\n              width={width}\n              height={height / 2}\n              prefix={prefix}\n              suffix={suffix}\n              unit={options.valueOptions.unit}\n              decimals={options.valueOptions.decimals}\n              thresholds={options.thresholds}\n              valueMappings={[] as ValueMapping[]}\n              showThresholdLabels={options.showThresholdLabels}\n              showThresholdMarkers={options.showThresholdMarkers}\n              minValue={options.minValue}\n              maxValue={options.maxValue}\n              theme={theme}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { PanelEditorProps, PanelOptionsGroup, Switch } from '@grafana/ui';\nimport { ComboOptions } from '../../types';\n\nexport class GraphOptions extends PureComponent<\n  PanelEditorProps<ComboOptions>\n> {\n  labelWidth = 8;\n\n  onToggleBars = () =>\n    this.props.onChange({\n      ...this.props.options,\n      showBars: !this.props.options.showBars,\n    });\n\n  onToggleLines = () =>\n    this.props.onChange({\n      ...this.props.options,\n      showLines: !this.props.options.showLines,\n    });\n\n  onTogglePoints = () =>\n    this.props.onChange({\n      ...this.props.options,\n      showPoints: !this.props.options.showPoints,\n    });\n\n  render() {\n    const { showBars, showLines, showPoints } = this.props.options;\n    return (\n      <PanelOptionsGroup title=\"Graph\">\n        <Switch\n          label=\"Show bars\"\n          labelClass={`width-${this.labelWidth}`}\n          checked={showBars}\n          onChange={this.onToggleBars}\n        />\n\n        <Switch\n          label=\"Show lines\"\n          labelClass={`width-${this.labelWidth}`}\n          checked={showLines}\n          onChange={this.onToggleLines}\n        />\n        <Switch\n          label=\"Show points\"\n          labelClass={`width-${this.labelWidth}`}\n          checked={showPoints}\n          onChange={this.onTogglePoints}\n        />\n      </PanelOptionsGroup>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\n\nimport { PanelOptionsGroup } from '@grafana/ui';\n\ninterface Props {\n  onChange: (layout: string) => void;\n  selectedLayout: string;\n}\n\nconst layoutOptions = [\n  { value: 'bigtext', label: 'Big Text' },\n  { value: 'biggraph', label: 'Big Graph' },\n  { value: 'biggauge', label: 'Big Gauge' },\n];\n\nexport class LayoutOptions extends PureComponent<Props> {\n  render() {\n    const { onChange, selectedLayout } = this.props;\n\n    return (\n      <PanelOptionsGroup title=\"Layout\">\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-evenly',\n          }}\n        >\n          {layoutOptions.map((layout, index) => {\n            const isActive = selectedLayout === layout.value;\n            return (\n              <div\n                key={`${layout.value}-${index}`}\n                onClick={() => onChange(layout.value)}\n                style={{\n                  padding: '10px',\n                  border: '1px solid white',\n                  borderRadius: '3px',\n                  backgroundColor: isActive && '#393737',\n                  cursor: isActive ? 'auto' : 'pointer',\n                  pointerEvents: isActive ? 'none' : 'auto',\n                  maxWidth: '30%',\n                }}\n              >\n                {layout.label}\n              </div>\n            );\n          })}\n        </div>\n      </PanelOptionsGroup>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { Gauge, Graph, ValueMapping } from '@grafana/ui';\n\nimport { Text } from './Text';\n\nimport { LayoutProps } from '../../types';\n\ninterface Props extends LayoutProps {}\n\nexport class BigTextLayout extends PureComponent<Props> {\n  render() {\n    const {\n      onInterpolate,\n      options,\n      timeSeries,\n      timeRange,\n      width,\n      height,\n      valueMappings,\n      theme,\n      thresholds,\n    } = this.props;\n\n    const gaugeValue = timeSeries[0].stats[options.valueOptions.stat];\n    const prefix = onInterpolate(options.valueOptions.prefix);\n    const suffix = onInterpolate(options.valueOptions.suffix);\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          width: '100%',\n          height: '100%',\n          flexDirection: 'column',\n        }}\n      >\n        <div style={{ height: '40%', width: '100%' }}>\n          <Text\n            style={{\n              fontSize: '60px',\n              textAlign: 'center',\n              overflow: 'hidden',\n              whiteSpace: 'nowrap',\n            }}\n            valueMappings={valueMappings}\n            thresholds={thresholds}\n            value={gaugeValue}\n            theme={theme}\n          />\n        </div>\n        <div\n          style={{\n            height: '60%',\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'flex-end',\n          }}\n        >\n          <div style={{ width: '60%', height: '100%' }}>\n            <Graph\n              timeSeries={timeSeries}\n              timeRange={timeRange}\n              width={width}\n              height={height}\n              showBars={options.showBars}\n              showLines={options.showLines}\n              showPoints={options.showPoints}\n            />\n          </div>\n          <div style={{ width: '40%', height: '100%' }}>\n            <Gauge\n              value={gaugeValue}\n              width={width / 3}\n              height={height * 0.6}\n              prefix={prefix}\n              suffix={suffix}\n              unit={options.valueOptions.unit}\n              decimals={options.valueOptions.decimals}\n              thresholds={options.thresholds}\n              valueMappings={[] as ValueMapping[]}\n              showThresholdLabels={options.showThresholdLabels}\n              showThresholdMarkers={options.showThresholdMarkers}\n              minValue={options.minValue}\n              maxValue={options.maxValue}\n              theme={theme}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  BasicGaugeColor,\n  getColorFromHexRgbOrName,\n  getMappedValue,\n  GrafanaTheme,\n  Threshold,\n  TimeSeriesValue,\n  ValueMapping,\n} from '@grafana/ui';\n\ninterface Props {\n  style: React.CSSProperties;\n  valueMappings: ValueMapping[];\n  thresholds: Threshold[];\n  theme: GrafanaTheme;\n  value: number;\n}\n\nexport class Text extends PureComponent<Props> {\n  getFontColor(value: TimeSeriesValue) {\n    const { thresholds, theme } = this.props;\n\n    if (thresholds.length === 1) {\n      return getColorFromHexRgbOrName(thresholds[0].color, theme.type);\n    }\n\n    const atThreshold = thresholds.filter(\n      threshold => (value as number) === threshold.value\n    )[0];\n    if (atThreshold) {\n      return getColorFromHexRgbOrName(atThreshold.color, theme.type);\n    }\n\n    const belowThreshold = thresholds.filter(\n      threshold => (value as number) > threshold.value\n    );\n\n    if (belowThreshold.length > 0) {\n      const nearestThreshold = belowThreshold.sort(\n        (t1, t2) => t2.value - t1.value\n      )[0];\n      return getColorFromHexRgbOrName(nearestThreshold.color, theme.type);\n    }\n\n    return BasicGaugeColor.Red;\n  }\n\n  render() {\n    const { valueMappings, value, style } = this.props;\n    let text = '';\n    if (valueMappings.length > 0) {\n      const valueMappedValue = getMappedValue(valueMappings, value);\n      if (valueMappedValue) {\n        text = valueMappedValue.text;\n      }\n    }\n\n    return (\n      <div style={Object.assign(style, { color: this.getFontColor(value) })}>\n        {text}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { getValueFormats, Select } from '@grafana/ui';\n\ninterface Props {\n  onChange: (item: any) => void;\n  defaultValue?: string;\n  width?: number;\n}\n\nexport class UnitPicker extends PureComponent<Props> {\n  static defaultProps = {\n    width: 12,\n  };\n\n  render() {\n    const { defaultValue, onChange, width } = this.props;\n\n    const unitGroups = getValueFormats();\n\n    // Need to transform the data structure to work well with Select\n    const groupOptions = unitGroups.map(group => {\n      const options = group.submenu.map(unit => {\n        return {\n          label: unit.text,\n          value: unit.value,\n        };\n      });\n\n      return {\n        label: group.text,\n        options,\n      };\n    });\n\n    const value = groupOptions.map(group => {\n      return group.options.find(option => option.value === defaultValue);\n    });\n\n    return (\n      <Select\n        width={width}\n        defaultValue={value}\n        isSearchable={true}\n        options={groupOptions}\n        placeholder=\"Choose\"\n        onChange={onChange}\n      />\n    );\n  }\n}\n","import { ReactPanelPlugin } from '@grafana/ui';\n\nimport { ComboPanel } from './components/ComboPanel';\nimport { ComboPanelEditor } from './components/ComboPanelEditor';\n\nimport { defaults, ComboOptions } from './types';\n\nexport const reactPanel = new ReactPanelPlugin<ComboOptions>(ComboPanel);\n\nreactPanel.setEditor(ComboPanelEditor);\nreactPanel.setDefaults(defaults);\n","import {\n  GrafanaTheme,\n  Threshold,\n  TimeRange,\n  TimeSeriesVMs,\n  ValueMapping,\n} from '@grafana/ui';\n\nexport interface ComboOptions {\n  valueMappings: ValueMapping[];\n  maxValue: number;\n  minValue: number;\n  showThresholdLabels: boolean;\n  showThresholdMarkers: boolean;\n  layout: string;\n  thresholds: Threshold[];\n  valueOptions: SingleStatValueOptions;\n  showLines: boolean;\n  showBars: boolean;\n  showPoints: boolean;\n}\n\nexport interface SingleStatValueOptions {\n  unit: string;\n  suffix: string;\n  stat: string;\n  prefix: string;\n  decimals?: number | null;\n}\n\nexport const defaults: ComboOptions = {\n  minValue: 0,\n  maxValue: 100,\n  layout: 'biggauge',\n  showThresholdMarkers: true,\n  showThresholdLabels: false,\n  showLines: true,\n  showBars: false,\n  showPoints: false,\n  valueOptions: {\n    prefix: '',\n    suffix: '',\n    decimals: null,\n    stat: 'avg',\n    unit: 'none',\n  },\n  valueMappings: [],\n  thresholds: [{ index: 0, value: -Infinity, color: 'green' }],\n};\n\nexport interface LayoutProps {\n  timeSeries: TimeSeriesVMs;\n  timeRange: TimeRange;\n  width: number;\n  height: number;\n  options: ComboOptions;\n  onInterpolate: (value: string, format?: string) => string;\n  theme: GrafanaTheme;\n  valueMappings: ValueMapping[];\n  thresholds: Threshold[];\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__grafana_ui__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;"],"sourceRoot":""}